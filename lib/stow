# This allows using GNU stow as a symlink manager with mr.
#
# FIXME

# To make mr use this file, add a line like this inside the [DEFAULT]
# section of your ~/.mrconfig
#include = cat /usr/share/mr/stow

lib =
    : ${STOW_DIR:=$HOME/.STOW}
    : ${STOW_TARGET:=$HOME}
    #
    [ -d "$STOW_DIR"    ] || mkdir -p "$STOW_DIR"
    [ -d "$STOW_TARGET" ] || mkdir -p "$STOW_TARGET"
    #
    #MR_STOWABLE=no
    is_stowable () {
        mr -r "$MR_NAME" stowable >/dev/null 2>&1
        #[ "$MR_STOWABLE" = yes ]
    }
    stowable_then_continue () {
        if is_stowable; then
            return 0
        else
            if [ -n "$1" ]; then
                info "$MR_NAME isn't stowable; skipping $MR_ACTION"
            fi
            return 1
        fi
    }
    #
    set_stow_common_opts () {
        STOW_PKG_PATH="$STOW_DIR/$MR_NAME"
        stow_common_opts="-t $STOW_TARGET -d $STOW_DIR"
    }
    #
    mr_stow () {
        stowable_then_continue || return 0
        set_stow_common_opts
        ensure_symlink_exists "$STOW_PKG_PATH" "$MR_REPO"
        command "${STOW_COMMAND:-stow}" $stow_common_opts "$MR_NAME"
    }
    mr_restow_if_already_stowed () {
        stowable_then_continue || return 0
        if ! [ -L "$STOW_PKG_PATH" ]; then
            info "$MR_REPO wasn't stowed yet; won't restow."
            return
        fi
        mr_restow_regardless
    }
    mr_restow_regardless () {
        stowable_then_continue || return 0
        set_stow_common_opts
        ensure_symlink_exists "$STOW_PKG_PATH" "$MR_REPO"
        command "${STOW_COMMAND:-stow}" -R -p $stow_common_opts "$MR_NAME"
    }
    mr_unstow () {
        stowable_then_continue || return 0
        set_stow_common_opts
        if ! [ -L "$STOW_PKG_PATH" ]; then
            info "$MR_REPO wasn't stowed yet in $STOW_PKG_PATH; can't unstow."
            return
        fi
        command "${STOW_COMMAND:-stow}" -D -p $stow_common_opts "$MR_NAME"
        rm -f "$STOW_PKG_PATH"
    }
    #
    ensure_symlink_exists () {
        [ $# = 2 ] || error "CONFIG BUG: Usage: ensure_symlink_exists SYMLINK TARGET"
        symlink="$1"
        required_target="$2"
        if [ -L "$symlink" ]; then
            actual_target="`readlink $symlink`"
            if [ "$actual_target" = "$required_target" ]; then
                return
            else
                error "Symlink $symlink already points to $actual_target, cannot point to $required_target; aborting."
            fi
        fi
        [ -e "$symlink" ] && error "Cannot create symlink $symlink - already exists; aborting."
        ln -s "$required_target" "$symlink"
    }

#stowable      = is_stowable
stowable      = false
showstowable  =
    if is_stowable; then
        echo "$MR_NAME is stowable"
    else
        echo "$MR_NAME is not stowable"
    fi

# Automatic actions
post_checkout = mr_stow
#post_update   = mr_restow_if_already_stowed
post_update   = mr_restow_regardless

# Manual actions
stow          = mr_stow
unstow        = mr_unstow
restow        = mr_restow_regardless

# Local variables:
# mode: sh
# End:
